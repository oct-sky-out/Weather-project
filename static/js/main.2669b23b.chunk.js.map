{"version":3,"sources":["WeatherInfo.js","AddCity.js","OtherCity.js","MenuComponent.js","WeatherMain.js","App.js","serviceWorker.js","index.js"],"names":["WeatherInfo","weather","name","main","wind","temp","temp_max","temp_min","feels_like","humidity","speed","className","role","aria-label","mainIcon","map","val","join","React","memo","menuActive","menuStyle","setMenuActive","setOtherCity","useState","cityName","setCityName","nextId","useRef","menuOpen","useCallback","tf","current","style","left","onChange","e","target","value","onSubmit","citys","concat","id","alert","preventDefault","onClick","placeholder","type","to","city","onRemove","exact","otherCity","menuClose","filter","console","log","key","match","params","latitude","longitude","currentLocation","setCurrentLocation","setWeather","useEffect","navigator","geolocation","getCurrentPosition","position","produce","draft","coords","a","axios","get","res","data","fetchData","ref","App","path","component","WeatherMain","Boolean","window","location","hostname","ReactDOM","render","basename","process","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2669b23b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./WeatherInfo.scss\";\n\nfunction mainIcon(main) {\n  switch (main) {\n    case \"Clear\":\n      return (\n        <span role=\"img\" aria-label=\"weather\">\n          üîÜ\n        </span>\n      );\n    case \"TunderStorm\":\n      return (\n        <span role=\"img\" aria-label=\"weather\">\n          ‚õàÔ∏è\n        </span>\n      );\n    case \"Drizzle\":\n      return (\n        <span role=\"img\" aria-label=\"weather\">\n          üå¶Ô∏è\n        </span>\n      );\n    case \"Snow\":\n      return (\n        <span role=\"img\" aria-label=\"weather\">\n          ‚õÑ\n        </span>\n      );\n    case \"Clouds\":\n      return (\n        <span role=\"img\" aria-label=\"weather\">\n          ‚òÅÔ∏è\n        </span>\n      );\n    case \"Rain\":\n      return (\n        <span role=\"img\" aria-label=\"weather\">\n          üåßÔ∏è\n        </span>\n      );\n    default:\n      return (\n        <span role=\"img\" aria-label=\"weather\">\n          ü§î Ïù¥Î™®Ìã∞ÏΩò Î°úÎìúÏã§Ìå®\n        </span>\n      );\n  }\n}\n\nfunction WeatherInfo({ weather }) {\n  const { name, main, wind } = weather;\n  const { temp, temp_max, temp_min, feels_like, humidity } = main;\n  const { speed } = wind;\n\n  return (\n    <div className=\"WeatherInfo\">\n      <div className=\"city-name\">{name}</div>\n      <div className=\"weather-emoji\">\n        {mainIcon(weather.weather.map((val) => val.main).join(\"\"))}\n      </div>\n      <div className=\"weather-temp\">ÌòÑÏû¨Ïò®ÎèÑ : {temp}¬∞C</div>\n      <div className=\"weather-temps\">\n        ÏµúÍ≥† Ïò®ÎèÑ : {temp_max}¬∞C ÏµúÏ†Ä Ïò®ÎèÑ : {temp_min}¬∞C\n      </div>\n      <div className=\"weather-temps\">Ï≤¥Í∞êÏò®ÎèÑ : {feels_like}¬∞C</div>\n      <div className=\"weather-info\">\n        <span role=\"img\" aria-label=\"humidity\">\n          üí¶ÏäµÎèÑ : {humidity}%\n        </span>\n        <span role=\"img\" aria-label=\"wind-speed\">\n          üçÉÌíçÏÜç : {speed}m/s\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherInfo;\n","import React, { useState, useCallback, useRef } from \"react\";\nimport { VscMenu, VscDiffAdded, VscHome } from \"react-icons/vsc\";\nimport { Link } from \"react-router-dom\";\nimport \"./AddCity.scss\";\n\nfunction AddCity({ menuActive, menuStyle, setMenuActive, setOtherCity }) {\n  const [cityName, setCityName] = useState(\"\");\n  const nextId = useRef(1);\n\n  const menuOpen = useCallback(() => {\n    if (!menuActive) {\n      setMenuActive((tf) => !tf);\n      menuStyle.current.style.left = \"0\";\n    }\n  }, [menuActive, menuStyle, setMenuActive]);\n\n  const onChange = useCallback((e) => {\n    setCityName(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (e) => {\n      if (cityName !== \"\") {\n        setOtherCity((citys) =>\n          citys.concat({ id: nextId.current, cityName: cityName })\n        );\n\n        setCityName(\"\");\n        nextId.current += 1;\n        alert(\"ÎèÑÏãúÍ∞Ä Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§. Î©îÎâ¥Ï∞ΩÏóêÏÑú ÌôïÏù∏ÌïòÏÑ∏Ïöî!\");\n      }\n      e.preventDefault();\n    },\n    [cityName, setOtherCity, nextId]\n  );\n\n  return (\n    <div className=\"AddCity\">\n      <div className=\"menu-open-ico\" onClick={menuOpen}>\n        <VscMenu />\n      </div>\n      <form className=\"add-city-form\" onSubmit={onSubmit}>\n        <input\n          className=\"add-city-input\"\n          value={cityName}\n          onChange={onChange}\n          placeholder=\"ÎèÑÏãúÏù¥Î¶ÑÏùÑ ÏòÅÏñ¥Î°ú ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!\"\n        />\n        <button className=\"add-city-btn\" type=\"submit\">\n          <VscDiffAdded />\n        </button>\n      </form>\n      <div className=\"go-home-btn\">\n        <Link className=\"home-link\" to=\"/\">\n          <VscHome />\n        </Link>\n      </div>\n    </div>\n  );\n}\nexport default React.memo(AddCity);\n","import React from \"react\";\nimport { VscTrash } from \"react-icons/vsc\";\nimport { Link } from \"react-router-dom\";\n\nfunction OtherCity({ city, onRemove }) {\n  const { cityName, id } = city;\n  return (\n    <div className=\"OtherCity\">\n      <Link to={`/${cityName}`} exact=\"true\" className=\"city-link\">\n        {cityName}\n      </Link>\n      <VscTrash\n        onClick={() => {\n          onRemove(id);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(OtherCity);\n","import React, { useCallback } from \"react\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport OtherCity from \"./OtherCity\";\nimport \"./MenuComponent.scss\";\n\nfunction MenuComponent({\n  menuStyle,\n  otherCity,\n  menuActive,\n  setMenuActive,\n  setOtherCity,\n}) {\n  const menuClose = useCallback(() => {\n    if (menuActive) {\n      setMenuActive((tf) => !tf);\n      menuStyle.current.style.left = \"-100%\";\n    }\n  }, [menuActive, menuStyle, setMenuActive]);\n\n  const onRemove = useCallback(\n    (id) => {\n      setOtherCity((citys) => citys.filter((city) => city.id !== id));\n    },\n    [setOtherCity]\n  );\n\n  return (\n    <div className=\"Menu\">\n      <div className=\"menu-close-ico\">\n        <VscChromeClose className=\"menu-close-btn\" onClick={menuClose} />\n      </div>\n      <div className=\"other-citys\">\n        {otherCity.map((city) => {\n          console.log(city);\n          return (\n            <OtherCity\n              className=\"other-city-item\"\n              city={city}\n              key={city.id}\n              onRemove={onRemove}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(MenuComponent);\n","import React, { useEffect, useState, useRef } from 'react';\nimport produce from 'immer';\nimport axios from 'axios';\nimport WeatherInfo from './WeatherInfo';\nimport AddCity from './AddCity';\nimport MenuComponent from './MenuComponent';\nimport './WeatherMain.scss';\n\nfunction WeatherMain({ match }) {\n\tconst cityName = match.params.cityName || 'local';\n\tconst [currentLocation, setCurrentLocation] = useState({\n\t\tlatitude: 0,\n\t\tlongitude: 0,\n\t});\n\tconst [weather, setWeather] = useState(null);\n\tconst [menuActive, setMenuActive] = useState(false);\n\tconst [otherCity, setOtherCity] = useState([]);\n\tconst menuStyle = useRef(null);\n\n\tuseEffect(() => {\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tsetCurrentLocation(\n\t\t\t\tproduce((draft) => {\n\t\t\t\t\tdraft.latitude = position.coords.latitude;\n\t\t\t\t\tdraft.longitude = position.coords.longitude;\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get(\n\t\t\t\t\tcityName === 'local'\n\t\t\t\t\t\t? `https://api.openweathermap.org/data/2.5/weather?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&appid=e4477edaeda4de89e0f1c1ec47719f0b&lang=kr&units=metric`\n\t\t\t\t\t\t: `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=e4477edaeda4de89e0f1c1ec47719f0b&lang=kr&units=metric`\n\t\t\t\t);\n\t\t\t\tsetWeather(res.data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, [currentLocation, cityName]);\n\n\tif (!weather) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className='WeatherMain'>\n\t\t\t<div className='menu-box' ref={menuStyle}>\n\t\t\t\t<MenuComponent\n\t\t\t\t\tmenuStyle={menuStyle}\n\t\t\t\t\totherCity={otherCity}\n\t\t\t\t\tmenuActive={menuActive}\n\t\t\t\t\tsetMenuActive={setMenuActive}\n\t\t\t\t\tsetOtherCity={setOtherCity}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='weather-container'>\n\t\t\t\t<div className='weather-header'>\n\t\t\t\t\t<AddCity\n\t\t\t\t\t\tsetOtherCity={setOtherCity}\n\t\t\t\t\t\tmenuStyle={menuStyle}\n\t\t\t\t\t\tsetMenuActive={setMenuActive}\n\t\t\t\t\t\tmenuActive={menuActive}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<WeatherInfo weather={weather} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default React.memo(WeatherMain);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport WeatherMain from \"./WeatherMain\";\n\n\nfunction App() {\n  return <Route path=\"/:cityName?\" component={WeatherMain} />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}